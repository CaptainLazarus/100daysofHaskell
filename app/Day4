-- module Main where

-- import Lib

-- -- Problem 1
-- el a xs
--     | xs == [] = False
--     | otherwise = if (head xs) == a then True else el a (tail xs)

-- el1 _ [] = False
-- el1 a (x:xs) = (a == x) || el1 a xs

-- -- Problem 2
-- -- nub1 xs 
-- --     | xs == [] = []
-- --     | otherwise = if elem (head xs) (tail xs) then nub1 tail xs else ......

-- -- nub1 xs = [head xs | x <- xs , el1 (head xs) (tail xs)]

-- nub2 [] = []
-- nub2 (x:xs)
--     | elem x xs = nub2 xs
--     | otherwise = x:(nub2 xs)

-- -- Problem 3
-- isAsc [] = True
-- isAsc (x:xs)
--     | x >= (head xs) = isAsc xs 
--     | x < (head xs) = False

-- main :: IO ()
-- -- main = print(el1 5 [1,2,3,4,5,6,7,8])
-- -- main = print(nub2 [1,1,2,2,3,3,4,4])
-- main = print(isAsc [1,2,3,4,4,5])